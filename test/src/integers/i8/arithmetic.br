fn my_main() -> i64 {
    let x:i8 := 5i8;
    let y:i8 := test();
    let z:i8 := test2(y);
    
    root::std::io::writei8ln(x);    // 5
    root::std::io::writei8ln(y);    // 5
    root::std::io::writei8ln(z);    // -5

    let w: i8 := x + y;
    root::std::io::writei8ln(w);    // 10

    let a: i8 := w + z;
    root::std::io::writei8ln(a); // 5

    let b: i8 := w * z;
    root::std::io::writei8ln(b); // -50

    let c: i8 := -(z * (2i8 * y));
    root::std::io::writei8ln(c); // 50

    let d: i8 := -(y * (12i8 + y));
    root::std::io::writei8ln(d); // -85

    let e: i8 := -(z * (12i8 - (20i8 / x)));
    root::std::io::writei8ln(e); // 40

    let f: i8 := x/w;
    root::std::io::writei8ln(f); // 0

    let g: i8 := add(x, y);
    root::std::io::writei8ln(g); // 10

    if (5i8 < 10i8) {
        root::std::io::write("5 is less than 10\n");
    };
    
    return 0;
}

fn test() -> i8 {
    return 5i8;
}

fn test2(i: i8) -> i8 {
    return -i;
}

fn add(a: i8, b: i8) -> i8 {
    return a + b;
}