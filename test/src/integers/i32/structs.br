
fn my_main() -> i64 {
    let x:i32 := 4i32;
    let y: i32 := 5i32;

    let b: Basic := Basic {
        a: x,
        b: y,
    };

    root::std::io::writei32ln(b.a);
    root::std::io::writei32ln(b.b);

    let z: i32 := b.a;
    root::std::io::writei32ln(z);

    let m: Mixed := Mixed {
        a: 5i32,
        b: 13,
    };

    test(m);

    let c: co i32 := init cotest(m);
    root::std::io::writei32ln(yield c);
    root::std::io::writei32ln(yield c);

    return;
}

fn test(m: Mixed) {
    root::std::io::writei32ln(m.a);
    root::std::io::writei64ln(m.b);
    return;
}

co cotest(m: Mixed) -> i32 {
    root::std::io::writei32ln(m.a);
    yret 41i32;
    root::std::io::writei64ln(m.b);
    yret 42i32;

    return 5i32;
}

struct Basic {
    a: i32,
    b: i32,
}

struct Mixed {
    a: i32,
    b: i64,
}