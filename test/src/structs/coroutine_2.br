fn my_main( p: bool) {
    let ms:MyStruct := MyStruct {x: 5, y: 13, z: true};
    let ms2:MyStruct := MyStruct {x: 123, y: 456, z: false};
    
    let c: co MyStruct := init my_co(ms, ms2);
    
    let w : MyStruct := yield (c);
    root::std::io::writei64ln(w.x);
    root::std::io::writei64ln(w.y);
    printbln w.z;
    
    let w2 : MyStruct := yield c;
    root::std::io::writei64ln(w2.x);
    root::std::io::writei64ln(w2.y);
    printbln w2.z;
    
    let w3 : MyStruct := yield c;
    root::std::io::writei64ln(w3.x);
    root::std::io::writei64ln(w3.y);
    printbln w3.z;
    
    return;
}

co my_co (x: MyStruct, y: MyStruct) -> MyStruct {
    root::std::io::writei64ln(x.x);
    yret x;
    printbln y.z;
    return y;
}

struct MyStruct {
    x: i64,
    y: i64,
    z: bool,
}