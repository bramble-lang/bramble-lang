fn my_main() -> i64 {
    let y: MyStruct := test();
    root::std::io::writei64ln(y.x);
    root::std::io::writei64ln(y.y);
    root::std::io::writei64ln(y.z);

    let z: MyStruct2 := test2();
    root::std::io::writei64ln(z.a);
    root::std::io::writei64ln(z.ms.x);
    root::std::io::writei64ln(z.ms.y);
    root::std::io::writei64ln(z.ms.z);
    root::std::io::writei64ln(z.b);

    let a: MyStruct := test3();
    root::std::io::writei64ln(a.x);
    root::std::io::writei64ln(a.y);
    root::std::io::writei64ln(a.z);

    return;
}

struct MyStruct {
    x: i64,
    y: i64,
    z: i64,
}

struct MyStruct2 {
    a: i64,
    ms: MyStruct,
    b: i64,
}

fn test() -> MyStruct {
    let t: MyStruct := MyStruct{z: 10, x: 5, y: 2};
    root::std::io::writei64ln(t.x);
    return t;
}

fn test2() -> MyStruct2 {
    let t:MyStruct2 := MyStruct2{
        a: 123,
        ms: MyStruct{x: 1, z: 3, y: 2},
        b: 456,
    };

    return t;
}

fn test3() -> MyStruct {
    let t:MyStruct2 := MyStruct2{
        a: 123,
        ms: MyStruct{x: 1, z: 3, y: 2},
        b: 456,
    };

    return t.ms;
}