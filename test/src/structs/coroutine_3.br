fn my_main() -> i64 {
    let c: co i64 := init numbers();
    
    let ms:MyStruct := MyStruct {
        x: c,
        y: 1,
        z: false,
    };

    root::std::io::writei64ln((yield ms.x));
    root::std::io::writei64ln((yield ms.x));
    root::std::io::writei64ln((yield ms.x));
    
    let c2: co i64 := make_co();
    let x:i64 := takes_co(c2);
    root::std::io::writei64ln(x);
    let x2:i64 := takes_co(c2);
    root::std::io::writei64ln(x2);

    return 0;
}

fn takes_co(c: co i64) -> i64{
    return (yield c);
}

fn make_co() -> co i64 {
    let c: co i64 := init numbers();
    return c;
}

co numbers() -> i64 {
    yret 1;
    yret 2;
    return 3;
}

struct MyStruct {
    x: co i64,
    y: i64,
    z: bool,
}