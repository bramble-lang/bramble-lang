fn my_main() -> i64 {
    let t: MyStruct3 := MyStruct3{
        ms2: MyStruct2{
            ms: MyStruct{x: 1, y: 2, z: -3},
        },
    };
    
    let t2: MyStruct3 := MyStruct3{
        ms2: MyStruct2{
            ms: MyStruct{x: 11, y: 22, z: 33},
        },
    };

    let t4: MyStruct4 := MyStruct4 {
        x: 123,
        a: t,
        b: t2,
        y: 456,
    };
    
    root::std::io::writei64ln(t4.x);
    root::std::io::writei64ln(t4.a.ms2.ms.x);
    root::std::io::writei64ln(t4.a.ms2.ms.y);
    root::std::io::writei64ln(t4.a.ms2.ms.z);

    root::std::io::writei64ln(t4.b.ms2.ms.x);
    root::std::io::writei64ln(t4.b.ms2.ms.y);
    root::std::io::writei64ln(t4.b.ms2.ms.z);
    root::std::io::writei64ln(t4.y);

    let deep: MS10 := MS10 {
        a: MS9{
            a: MS8 {
                a: MS7{
                    a: MS6 {
                        a: MS5 {
                            a: t4,
                        }
                    }
                }
            }
        }
    };

    root::std::io::writei64ln(deep.a.a.a.a.a.a.x);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.a.ms2.ms.x);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.a.ms2.ms.y);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.a.ms2.ms.z);

    root::std::io::writei64ln(deep.a.a.a.a.a.a.b.ms2.ms.x);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.b.ms2.ms.y);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.b.ms2.ms.z);
    root::std::io::writei64ln(deep.a.a.a.a.a.a.y);

    return 0;
}

struct MyStruct {
    x: i64,
    y: i64,
    z: i64,
}

struct MyStruct2 {
    ms: MyStruct,
}

struct MyStruct3 {
    ms2: MyStruct2,
}

struct MyStruct4 {
    x: i64,
    a: MyStruct3,
    b: MyStruct3,
    y: i64,
}

struct MS5 {
    a: MyStruct4,
}

struct MS6 {
    a: MS5,
}

struct MS7 {
    a: MS6,
}

struct MS8 {
    a: MS7,
}

struct MS9 {
    a: MS8,
}

struct MS10 {
    a: MS9,
}