fn my_main() -> i64 {
    let x:i64 := my_mod::inner::add(3, 2);
    project::std::io::writei64ln(x);

    let b:bool := ::nested::my_mod::is_3(1);
    project::std::io::writeboolln(b);

    let b2:bool := root::nested::my_mod::is_3(3);
    project::std::io::writeboolln(b2);
    
    let y:i64 := self::my_mod::inner::add(7, 2);
    project::std::io::writei64ln(y);

    return 0;
}

mod my_mod {
    fn is_3(i: i64) -> bool {
        let x: i64 := self::inner::add(1, 2);
        return i == x;
    }
        
    fn plus(a: i64, b: i64) -> i64 {
        return a + b;
    }
    
    mod inner {
        fn add(a: i64, b: i64) -> i64 {
            return super::plus(a, b);
            //return a + b;
        }
    }
}