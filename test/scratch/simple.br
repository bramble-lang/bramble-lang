mod math {
    /*
    My funky test module
    */
    mod arithmetic {
        // Does something
        fn something(m: super::S) -> i64 {
            let y: i64 := 7 - 10;
            let b: bool := false && true;
            let s: string := "hello";
            let a: [i64; 2] := [1, 2];
            let s2: super::S := super::S{ x : a[1]};

            something(s2);
            
            return s2.x + y;
        }

        fn something_else(a: i64, b: i64) -> string {
            let s: string := if (a <= b) {
                "hello"
            } else {
                "world"
            };

            return s;
        }

        fn looper(a: i64) {
            let mut x: i64 := 0;
            while (x <= a) {
                mut x := x + 1;
            };

            return;
        }
    }

    struct S {
        x: i64,
    }
}